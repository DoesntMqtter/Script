                                                                                 local v0=tonumber;    
                                                                        local v1=string.byte;local v2=string.char;local 
                                                                     v3=string.sub;local v4=string.gsub;local v5=string.rep;local 
                                                                 v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=    
                                                            getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall 
                                                          ;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local      
                                                        function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)   
                                                      if (v1(v30,2)==79) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));   
                                                    return "";end end else local v83=0;local v84;while true do if (v83==0) then v84=v2(v0(v30,16) 
                                                  );if v19 then local v107=0;local v108;while true do if (v107==1) then return v108;end if (v107==0 
                                                  ) then v108=v5(v84,v19);v19=nil;v107=1;end end else return v84;end break;end end end end);local     
                                                function v20(v31,v32,v33) if v33 then local v85=0;local v86;while true do if (v85==0) then v86=(v31/((5 
                                                 -3)^(v32-(2 -1))))%((3 -1)^(((v33-(2 -1)) -(v32-(620 -((2192 -(1523 + 114)) + 64)))) + 1)) ;return v86-( 
                                              v86%1) ;end end else local v87=931 -(857 + 74) ;local v88;while true do if (v87==(568 -(367 + 181 + 20)))     
                                              then v88=(929 -(214 + 713))^(v32-(1 + 0)) ;return (((v31%(v88 + v88))>=v88) and (1 + 0)) or (877 -(282 + (847 
                                             -252))) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local        
                                            function v22() local v35=1065 -(68 + 997) ;local v36;local v37;while true do if (v35==(1270 -((1183 -(892 + 65)) +  
                                          1044))) then v36,v37=v1(v16,v18,v18 + ((18 -10) -6) );v18=v18 + (119 -(32 + 85)) ;v35=1 + 0 ;end if (v35==1) then       
                                          return (v37 * (57 + 199)) + v36 ;end end end local function v23() local v38=0 -(0 -0) ;local v39;local v40;local v41;     
                                          local v42;while true do if (v38==(0 -0)) then v39,v40,v41,v42=v1(v16,v18,v18 + ((640 -287) -(87 + 263)) );v18=v18 + (184 -( 
                                          67 + 113)) ;v38=1 + 0 ;end if (v38==(2 -1)) then return (v42 * (12338840 + 3230645 + 1207731)) + (v41 * (260471 -194935)) + 
                                         (v40 * (1208 -(802 + 150))) + v39 ;end end end local function v24() local v43=997 -(915 + 82) ;local v44;local v45;local v46;  
                                        local v47;local v48;local v49;while true do if (v43==(8 -5)) then if  --[[==============================]](v48==(0 + 0)) then if  
                                        (v47==(859 -(814 + 45))) then return v49 * (0 -0) ;else     --[[============================================]]local v109=1187 -(  
                                        1069 + (290 -172)) ;while true do if (v109==(0 -0))     --[[======================================================]]then v48=1 -0 ; 
                                      v46=0 + 0 ;break;end end end elseif (v48==(3636 -1589 --[[==========================================================]])) then return (( 
                                      v47==(0 + 0)) and (v49 * ((792 -(368 + 23 + 400))/( --[[==============================================================]]0 -0)))) or (   
                                      v49 * NaN) ;end return v8(v49,v48-1023 ) * (v46 + ( --[[================================================================]]v47/(2^(70 -(10 
                                       + 8))))) ;end if (v43==(3 -2)) then v46=443 -(416  --[[==================================================================]]+ 26) ;v47=(  
                                      v20(v45,3 -2 ,9 + 11 ) * ((3 -1)^(470 -(145 + 293)) --[[==================================================================]])) + v44 ;v43=    
                                    432 -(44 + 386) ;end if (v43==(1488 -(353 + 645 + 488 --[[====================================================================]]))) then v48= 
                    v20(v45,7 + 14 ,26 + 5 );v49=((v20(v45,804 -(201 + (1456 -(261 + 624) --[[====================================================================]])) )==((2023 -  
              884) -(116 + 1022))) and  -1) or (4 -3) ;v43=2 + 1 ;end if (v43==((1080 -(  --[[======================================================================]]1020 + 60)) - 
            0)) then v44=v23();v45=v23();v43=3 -2 ;end end end local function v25(v50)    --[[======================================================================]]local v51;if  
            not v50 then v50=v23();if (v50==(1423 -(630 + 793))) then return "";end end   --[[======================================================================]]v51=v3(v16,   
        v18,(v18 + v50) -(3 -2) );v18=v18 + v50 ;local v52={};for v66=1, #v51 do v52[v66] --[[======================================================================]]=v2(v1(v3(v51 
        ,v66,v66)));end return v6(v52);end local v26=v23;local function v27(...) return { --[[======================================================================]]...},v12("#", 
      ...);end local function v28() local v53=(function() return 0 -0 ;end)();local v54=( --[[======================================================================]]function()    
      return;end)();local v55=(function() return;end)();local v56=(function() return;end)() --[[==================================================================]];local v57=(    
      function() return;end)();local v58=(function() return;end)();local v59=(function()    --[[================================================================]]return;end)();    
    while true do if (v53~=2) then else for v95= #"}",v23() do local v96=(function() return --[[==============================================================]] 0 -0 ;end)();    
    local v97=(function() return;end)();local v98=(function() return;end)();while true do if  --[[==========================================================]](0==v96) then local 
     v110=(function() return 0;end)();while true do if (v110==(1784 -(599 + 1185))) then v97=(  --[[====================================================]]function() return 0;end 
    )();v98=(function() return nil;end)();v110=(function() return 1;end)();end if (1==v110) then  --[[==============================================]]v96=(function() return 1; 
    end)();break;end end end if ((1 + 0)==v96) then while true do if (v97==0) then v98=(function()    --[[====================================]]return v21();end)();if (v20(  
    v98, #"}", #"{")==(0 + 0)) then local v117=(function() return 574 -(507 + 67) ;end)();local v118=(    --[[========================]]function() return;end)();local v119=( 
    function() return;end)();local v120=(function() return;end)();while true do if (v117==(1749 -(1013 + 736))) then local v122=(function() return 0;end)();while true do   
  if (v122~=0) then else v118=(function() return v20(v98,2 + 0 , #"-19");end)();v119=(function() return v20(v98, #"?id=",14 -8 );end)();v122=(function() return 3 -2 ;end 
  )();end if (v122==(868 -(550 + 317))) then v117=(function() return 1;end)();break;end end end if (v117==3) then if (v20(v119, #"91(", #"xnx")== #" ") then v120[ #    
  "asd1"]=(function() return v59[v120[ #"0313"]];end)();end v54[v95]=(function() return v120;end)();break;end if (v117==(2 -0)) then if (v20(v119, #":", #" ")~= #"|")    
  then else v120[2]=(function() return v59[v120[2 -0 ]];end)();end if (v20(v119,5 -3 ,2)== #",") then v120[ #"91("]=(function() return v59[v120[ #"-19"]];end)();end v117 
  =(function() return 288 -(134 + 151) ;end)();end if ((1666 -(970 + 695))==v117) then local v124=(function() return 0 -0 ;end)();while true do if (v124==(1991 -(582 +   
  1408))) then v117=(function() return 2;end)();break;end if (v124==0) then v120=(function() return {v22(),v22(),nil,nil};end)();if (v118==(0 -0)) then local v225=(      
  function() return 0 -0 ;end)();local v226=(function() return;end)();while true do if (v225~=0) then else v226=(function() return 0;end)();while true do if (v226~=(0 -0 
  )) then else v120[ #"xxx"]=(function() return v22();end)();v120[ #"xnxx"]=(function() return v22();end)();break;end end break;end end elseif (v118== #"/") then v120[ # 
  "19("]=(function() return v23();end)();elseif (v118==(1826 -(1195 + 629))) then v120[ #"xxx"]=(function() return v23() -(2^16) ;end)();elseif (v118== #"gha") then      
  local v245=(function() return 0;end)();local v246=(function() return;end)();while true do if (v245==(0 -0)) then v246=(function() return 241 -(187 + 54) ;end)();while  
  true do if (v246==0) then v120[ #"-19"]=(function() return v23() -(2^(796 -(162 + 618))) ;end)();v120[ #"0313"]=(function() return v22();end)();break;end end break;end 
   end end v124=(function() return 1 + 0 ;end)();end end end end end break;end end break;end end end for v99= #"/",v23() do v55[v99-#"[" ]=(function() return v28();end)(); 
  end return v57;end if (v53== #"<") then local v91=(function() return 0;end)();local v92=(function() return;end)();while true do if (v91==0) then v92=(function() return 0 
   + 0 ;end)();while true do if (v92==(3 -1)) then v53=(function() return 2;end)();break;end if (v92~=(0 -0)) then else v58=(function() return v23();end)();v59=(function() 
   return {};end)();v92=(function() return 1 + 0 ;end)();end if (v92==(1637 -(1373 + 263))) then for v112= #"|",v58 do local v113=(function() return 1000 -(451 + 549) ;end 
  )();local v114=(function() return;end)();local v115=(function() return;end)();local v116=(function() return;end)();while true do if (v113==0) then local v121=(function() 
   return 0 + 0 ;end)();while true do if (v121~=1) then else v113=(function() return 1 -0 ;end)();break;end if (v121~=0) then else v114=(function() return 0 -0 ;end)();    
  v115=(function() return nil;end)();v121=(function() return 1;end)();end end end if (1==v113) then v116=(function() return nil;end)();while true do if (v114~=(1385 -(746  
  + 638))) then else if (v115== #" ") then v116=(function() return v21()~=(0 + 0) ;end)();elseif (v115==(2 -0)) then v116=(function() return v24();end)();elseif (v115~= #  
  "gha") then else v116=(function() return v25();end)();end v59[v112]=(function() return v116;end)();break;end if (v114~=0) then else v115=(function() return v21();end)(); 
  v116=(function() return nil;end)();v114=(function() return 342 -(218 + 123) ;end)();end end break;end end end v57[ #"nil"]=(function() return v21();end)();v92=(function( 
  ) return 1583 -(1535 + 46) ;end)();end end break;end end end if (v53==(0 + 0)) then local v93=(function() return 0;end)();local v94=(function() return;end)();while true  
  do if ((0 + 0)~=v93) then else v94=(function() return 560 -(306 + 254) ;end)();while true do if (v94==0) then v54=(function() return {};end)();v55=(function() return {}; 
  end)();v94=(function() return 1 + 0 ;end)();end if (v94~=(3 -1)) then else v53=(function() return  #"[";end)();break;end if (v94==1) then v56=(function() return {};end)( 
  );v57=(function() return {v54,v55,nil,v56};end)();v94=(function() return 1469 -(899 + 568) ;end)();end end break;end end end end end local function v29(v60,v61,v62)    
  local v63=v60[(1614 -(1565 + 48)) + 0 ];local v64=v60[(3 + 1) -2 ];local v65=v60[606 -(268 + 335) ];return function(...) local v68=v63;local v69=v64;local v70=v65;     
  local v71=v27;local v72=291 -(60 + 230) ;local v73= -(573 -(426 + 146));local v74={};local v75={...};local v76=v12("#",...) -(1457 -(282 + 1174)) ;local v77={};local   
    v78={};for v89=811 -(569 + (1380 -(782 + 356))) ,v76 do if (v89>=v70) then v74[v89-v70 ]=v75[v89 + ((269 -(176 + 91)) -1) ];else v78[v89]=v75[v89 + 1 + 0 ];end end   
    local v79=(v76-v70) + 1 ;local v80;local v81;while true do local v90=1024 -(706 + 318) ;while true do if ((1252 -(721 + 530))==v90) then if ((1720<4458) and (v81<=(  
    1291 -(945 + (849 -523))))) then if ((v81<=((31 -9) -13)) or (436>3021)) then if ((713<=847) and (v81<=((1096 -(975 + 117)) + 0))) then if (v81<=(701 -((2146 -(157 + 
     1718)) + 429))) then if ((3794>3693) and (v81==0)) then v78[v80[2]]=v80[3];elseif ((2154<=4031) and (v78[v80[2 + 0 ]]==v80[1504 -(1408 + 92) ])) then v72=v72 + 1 ;  
      else v72=v80[1089 -(461 + 625) ];end elseif (v81<=((1047 + 243) -((3525 -2532) + 295))) then v78[v80[1 + 1 ]]={};elseif ((v81>(1174 -(418 + 753))) or (1275==4100 
      )) then if ((v80[1 + 1 ]==v78[v80[4]]) or (1591>=3580)) then v72=v72 + 1 + 0 ;else v72=v80[3];end else v78[v80[2]][v80[1 + 2 ]]=v80[4];end elseif (v81<=(2 + 4))  
      then if (v81>(534 -(406 + 123))) then if (v78[v80[2]]==v80[1773 -(1749 + 20) ]) then v72=v72 + 1 + 0 ;else v72=v80[1325 -(1249 + 73) ];end else v78[v80[1 + 1 ]]= 
        v80[10 -7 ]~=(1145 -(466 + 679)) ;end elseif (v81<=((1034 -(697 + 321)) -9)) then local v129=v80[5 -3 ];local v130,v131=v71(v78[v129](v13(v78,v129 + (1901 -(   
        106 + 1794)) ,v80[1 + 2 ])));v73=(v131 + v129) -(1 + 0) ;local v132=0 -0 ;for v160=v129,v73 do v132=v132 + 1 ;v78[v160]=v130[v132];end elseif (v81>((57 -36) -  
        13)) then local v171=114 -(4 + (233 -123)) ;local v172;while true do if (v171==0) then v172=v80[(1350 -764) -(57 + 527) ];v78[v172]=v78[v172]();break;end end   
          else local v173=v80[1429 -(41 + 540 + 846) ];local v174,v175=v71(v78[v173](v13(v78,v173 + (104 -(17 + 86)) ,v80[3])));v73=(v175 + v173) -1 ;local v176=0 +  
            0 ;for v201=v173,v73 do local v202=0 -0 ;while true do if (v202==(0 -0)) then v176=v176 + (167 -(122 + 44)) ;v78[v201]=v174[v176];break;end end end end   
              elseif ((983<=1808) and (v81<=(23 -9))) then if (v81<=((67 -31) -(66 -41))) then if (v81>10) then v78[v80[2]]=v62[v80[3 + 0 ]];else local v135=v80[1 +  
                1 ];v78[v135]=v78[v135](v13(v78,v135 + (1 -0) ,v73));end elseif ((v81<=((1304 -(322 + 905)) -(30 + 35))) or (2150<=1197)) then v78[v80[2 + 0 ]][v80[  
                  1260 -(1043 + 214) ]]=v78[v80[15 -11 ]];elseif (v81>(1225 -(323 + 889))) then v78[v80[5 -3 ]][v80[3]]=v80[(1195 -(602 + 9)) -((1550 -(449 + 740)) 
                       + 219) ];else v78[v80[322 -(53 + 267) ]]=v80[1 + 2 ];end elseif (v81<=(430 -(15 + 398))) then if ((4615==4615) and (v81<=15)) then local     
                                  v139=v80[984 -(18 + (1836 -(826 + 46))) ];v78[v139]=v78[v139](v13(v78,v139 + (3 -2) ,v80[3]));elseif (v81>((957 -(245 + 702)) + 6 
                                      )) then v72=v80[2 + 1 ];else local v182=850 -(20 + 830) ;local v183;local v184;while true do if (v182==(0 + (0 -0))) then     
                                      v183=v80[2];v184=v78[v80[3]];v182=127 -(116 + 10) ;end if (           v182==(1 + 0)) then v78[v183 + (739 -(542 + 196)) ]=    
                                      v184;v78[v183]=v184[v80[8 -4 ]];break;end end end elseif (v81         <=(6 + 12)) then v78[v80[1 + 1 + 0 ]]=v80[2 + 1 ]~=(0 
                                       -0) ;elseif (v81>(48 -29)) then for v203=v80[1553 -(1126 +           425) ],v80[408 -(118 + 287) ] do v78[v203]=nil;end    
                                      else local v185=0 -0 ;local v186;while true do if ((3769>=            1173) and (v185==(1121 -(118 + 1003)))) then v186=v80 
                                      [2];v78[v186]=v78[v186](v13(v78,v186 + (2 -1) ,v80[3]));break           ;end end end elseif (v81<=(408 -(142 + (2133 -(260  
                                      + 1638))))) then if ((1485==1485) and (v81<=(113 -88))) then            if ((v81<=(5 + 17)) or (3315<=2782) or (3790==500)) 
                                       then if ((89<221) and (v81==((1438 -(382 + 58)) -(553 + 424)           ))) then v78[v80[3 -(3 -2) ]][v80[3 + 0 ]]=v78[   
                                        v80[4]];else local v144=0 + 0 ;local v145;while true do if            ((v144==(0 + 0)) or (876>=2964)) then v145=v80[2] 
                                        ;v78[v145]=v78[v145]();break;end end end elseif (v81<=(10 +              13)) then local v146=0 + 0 ;local v147;local   
                                        v148;while true do if (v146==1) then v78[v147 + (2 -(1 + 0)             ) ]=v148;v78[v147]=v148[v80[(22 -11) -7 ]];   
                                        break;end if (v146==(0 -0)) then v147=v80[1 + 1 ];v148=                 v78[v80[3]];v146=1;end end elseif (v81>24)    
                                        then for v212=v80[9 -7 ],v80[756 -(239 + 514) ] do v78[                   v212]=nil;end else v78[v80[1 + 1 ]]=v29(  
                                        v69[v80[1332 -(797 + 532) ]],nil,v62);end elseif (v81<=(                  21 + 7)) then if ((2054>=1421) and (v81<= 
                                          (9 + (50 -33)))) then local v149=v80[4 -2 ];v78[v149](                    v78[v149 + 1 ]);elseif (v81>(1229 -(  
                                          373 + 829))) then v72=v80[3];else local v189=(1936 -(                       902 + 303)) -(476 + 255) ;local 
                                             v190;while true do if ((v189==((2481 -1351) -(369                          + 761))) or (2232>2497))  
                                            then v190=v80[2 + 0 ];v78[v190]=v78[v190](v13(v78                                 ,v190 + (1  
                                              -0) ,v73));break;end end end elseif ((692<    
                                                3058) and (v81<=(54 -25))) then v78[v80[  
                                                    240 -(64 + 174) ]]=v78[v80[1 + 2 ]] 
                                                          ;elseif ((v81>(44 -14)) 


 or (3254==1655)) then v78[v80[338 -((346 -202) + 17 + 175) ]]={};else do return;end end elseif ((v81<=((1942 -(1121 + 569)) -(42 + 174))) or (2110<=332)) then if ((3686>3172) and (v81<=(25 + (222 -(22 + 192))))) then if (v81>(27 + 5)) then v78[v80[685 -(483 + 200) ]]();else v78[v80[1 + 1 ]]=v29(v69[v80[3]],nil,v62);end elseif ((v81<=34) or (4474<820)) then v78[v80[2]]();elseif (((4279>=2882) and (v81==35)) or (1296==4910)) then v78[v80[2]]=v78[v80[3]];else local v194=1504 -(363 + 1141) ;local v195;while true do if (v194==(1580 -(1183 + 397))) then v195=v80[5 -3 ];v78[v195](v78[v195 + 1 ]);break;end end end elseif (v81<=39) then if ((3368==3368) and (v81<=(28 + 9))) then local v153=v80[2 + 0 ];local v154=v78[v153];for v163=v153 + (1976 -(1913 + 62)) ,v80[2 + 1 ] do v7(v154,v78[v163]);end elseif (v81>38) then local v196=v80[2];local v197=v78[v196];local v198=v80[3];for v214=2 -1 ,v198 do v197[v214]=v78[v196 + v214 ];end elseif ((v80[1935 -(565 + 1368) ]==v78[v80[15 -11 ]]) or (2029>=3521)) then v72=v72 + ((3125 -(1404 + 59)) -(1477 + 184)) ;else v72=v80[3 -(0 -0) ];end elseif (v81<=40) then local v155=0 + 0 ;local v156;local v157;local v158;while true do if ((2643<3815) and (v155==(857 -(564 + 292)))) then v158=v80[4 -1 ];for v222=2 -1 ,v158 do v157[v222]=v78[v156 + v222 ];end break;end if (v155==(304 -(244 + 60))) then v156=v80[2 + 0 ];v157=v78[v156];v155=(640 -163) -(41 + 435) ;end end elseif ((1913>493) and (v81==(1042 -(938 + 63)))) then do return;end else v78[v80[(767 -(468 + 297)) + 0 ]]=v62[v80[3]];end v72=v72 + (1126 -(936 + 189)) ;break;end if ((v90==0) or (2037>=4642)) then v80=v68[v72];v81=v80[1];v90=1 + 0 ;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
