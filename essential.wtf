local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v85=0;local v86;while true do if (v85==0) then v86=v2(v0(v30,16));if v19 then local v119=0;local v120;while true do if (v119==1) then return v120;end if (v119==0) then v120=v5(v86,v19);v19=nil;v119=1;end end else return v86;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v87=(v31/((570 -(367 + 181 + 20))^(v32-(928 -(214 + 713)))))%(2^(((v33-(2 -1)) -(v32-1)) + (2 -(1 -0)))) ;return v87-(v87%(1 -0)) ;else local v88=(4 -2)^(v32-(620 -(555 + (1129 -(68 + 997))))) ;return (((v31%(v88 + v88))>=v88) and 1) or (931 -(857 + 74)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 );v18=v18 + (1272 -(226 + 1044)) ;return (v36 * (1114 -858)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (120 -(32 + 85)) );v18=v18 + 4 ;return (v40 * (16441815 + 335401)) + (v39 * ((34668 -20135) + (94275 -43272))) + (v38 * (1213 -(892 + 65))) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=1 -0 ;local v44=(v20(v42,1,(368 + 2) -(87 + (1054 -(368 + 423))) ) * ((182 -(67 + 113))^(24 + 8))) + v41 ;local v45=v20(v42,21,75 -44 );local v46=((v20(v42,24 + 8 )==(3 -2)) and  -(953 -((2520 -1718) + 150))) or (2 -1) ;if (v45==(0 -0)) then if (v44==((18 -(10 + 8)) + 0)) then return v46 * (997 -(915 + 82)) ;else local v104=0;while true do if (v104==((0 -0) -0)) then v45=443 -(416 + 26) ;v43=0 + 0 ;break;end end end elseif (v45==(2691 -644)) then return ((v44==((3789 -2602) -(1069 + 51 + 67))) and (v46 * (((3 -1) -1)/0))) or (v46 * NaN) ;end return v8(v46,v45-(2237 -1214) ) * (v43 + (v44/((1 + 1)^(92 -40)))) ;end local function v25(v47) local v48=438 -((514 -369) + 293) ;local v49;local v50;while true do if (v48==((1291 -(814 + 45)) -(44 + 386))) then v50={};for v105=1487 -((2458 -1460) + 488) , #v49 do v50[v105]=v2(v1(v3(v49,v105,v105)));end v48=1 + 2 ;end if (v48==(1 + 0)) then v49=v3(v16,v18,(v18 + v47) -(773 -(11 + 190 + 571)) );v18=v18 + v47 ;v48=2;end if (v48==(1141 -(116 + 1022))) then return v6(v50);end if (v48==(0 -0)) then v49=nil;if  not v47 then v47=v23();if (v47==(0 + 0 + 0)) then return "";end end v48=(888 -(261 + 624)) -2 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return function(v89,v90,v91,v92,v93,v94,v95,v96) local v89=(function() return 0;end)();local v90=(function() return;end)();local v91=(function() return;end)();while true do if (v89~= #"}") then else if (v90== #"~") then v91=(function() return v92()~=0 ;end)();elseif (v90==2) then v91=(function() return v93();end)();elseif (v90== #"gha") then v91=(function() return v94();end)();end v95[v96]=(function() return v91;end)();break;end if (v89~=0) then else local v112=(function() return 0;end)();local v113=(function() return;end)();while true do if (v112~=(0 + 0)) then else v113=(function() return 0 -0 ;end)();while true do if (0~=v113) then else v90=(function() return v92();end)();v91=(function() return nil;end)();v113=(function() return 1;end)();end if (v113~=1) then else v89=(function() return  #"~";end)();break;end end break;end end end end return v89,v90,v91,v92,v93,v94,v95,v96;end;end)();local v52=(function() return function(v97,v98,v99) local v100=(function() return 0 -0 ;end)();while true do if (v100~=0) then else local v114=(function() return 374 -(123 + 251) ;end)();while true do if (v114~=(0 -0)) then else local v121=(function() return 0;end)();while true do if (0==v121) then v97[v98-#"!" ]=(function() return v99();end)();return v97,v98,v99;end end end end end end end;end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {v53,v54,nil,v55};end)();local v57=(function() return v23();end)();local v58=(function() return {};end)();for v66= #"[",v57 do FlatIdent_104D4,Type,Cons,v21,v24,v25,v58,v66=(function() return v51(FlatIdent_104D4,Type,Cons,v21,v24,v25,v58,v66);end)();end v56[ #"xxx"]=(function() return v21();end)();for v67= #"[",v23() do local v68=(function() return 0;end)();local v69=(function() return;end)();while true do if (v68==0) then v69=(function() return v21();end)();if (v20(v69, #"{", #"<")==(698 -(208 + 490))) then local v115=(function() return 0 + 0 ;end)();local v116=(function() return;end)();local v117=(function() return;end)();local v118=(function() return;end)();while true do if (v115==(1 + 1)) then if (v20(v117, #",", #"!")~= #"|") then else v118[2]=(function() return v58[v118[2]];end)();end if (v20(v117,2,2)~= #"|") then else v118[ #"gha"]=(function() return v58[v118[ #"xxx"]];end)();end v115=(function() return 839 -(660 + 176) ;end)();end if (v115==1) then local v122=(function() return 0;end)();local v123=(function() return;end)();while true do if ((0 + 0)==v122) then v123=(function() return 202 -(14 + 188) ;end)();while true do if (v123~=0) then else v118=(function() return {v22(),v22(),nil,nil};end)();if (v116==(675 -(534 + 141))) then local v224=(function() return 0 + 0 ;end)();local v225=(function() return;end)();while true do if (v224~=(0 + 0)) then else v225=(function() return 0 + 0 ;end)();while true do if (v225~=0) then else v118[ #"xxx"]=(function() return v22();end)();v118[ #"xnxx"]=(function() return v22();end)();break;end end break;end end elseif (v116== #"{") then v118[ #"19("]=(function() return v23();end)();elseif (v116==2) then v118[ #"xxx"]=(function() return v23() -((3 -1)^16) ;end)();elseif (v116~= #"xnx") then else local v240=(function() return 0;end)();local v241=(function() return;end)();while true do if (v240==(0 -0)) then v241=(function() return 0 -0 ;end)();while true do if (v241==(0 + 0)) then v118[ #"nil"]=(function() return v23() -((2 + 0)^16) ;end)();v118[ #"0836"]=(function() return v22();end)();break;end end break;end end end v123=(function() return 397 -(115 + 281) ;end)();end if (v123~=(2 -1)) then else v115=(function() return 2;end)();break;end end break;end end end if (0==v115) then local v124=(function() return 0 + 0 ;end)();while true do if (v124==(2 -1)) then v115=(function() return 3 -2 ;end)();break;end if ((867 -(550 + 317))~=v124) then else v116=(function() return v20(v69,2 -0 , #"xnx");end)();v117=(function() return v20(v69, #"0313",8 -2 );end)();v124=(function() return 1;end)();end end end if (v115==3) then if (v20(v117, #"-19", #"xxx")== #"\\") then v118[ #"0313"]=(function() return v58[v118[ #"asd1"]];end)();end v53[v67]=(function() return v118;end)();break;end end end break;end end end for v70= #"<",v23() do v54,v70,v28=(function() return v52(v54,v70,v28);end)();end return v56;end local function v29(v60,v61,v62) local v63=v60[1];local v64=v60[2];local v65=v60[(1138 -(369 + 761)) -5 ];return function(...) local v71=v63;local v72=v64;local v73=v65;local v74=v27;local v75=1;local v76= -(286 -(134 + 151));local v77={};local v78={...};local v79=v12("#",...) -(1 -0) ;local v80={};local v81={};for v101=0,v79 do if (v101>=v73) then v77[v101-v73 ]=v78[v101 + (1991 -(582 + 1408)) ];else v81[v101]=v78[v101 + (3 -(2 + 0)) ];end end local v82=(v79-v73) + ((1 -0) -0) ;local v83;local v84;while true do v83=v71[v75];v84=v83[3 -2 ];if ((v84<=(1844 -(1195 + 629))) or (142>=4749)) then if ((3926<=4134) and (v84<=((20 -9) -2))) then if ((v84<=(245 -(187 + 54))) or (164>=2785)) then if ((v84<=(781 -(162 + 618))) or (525==2109)) then if ((33==33) and (v84==0)) then v75=v83[3 + 0 ];else local v131=v83[2 + 0 ];v81[v131](v81[v131 + (1 -0) ]);end elseif (v84<=(2 -0)) then local v132=0;local v133;local v134;while true do if (v132==(0 + 0)) then v133=v83[1638 -(1373 + 263) ];v134=v81[v133];v132=1;end if ((3054<=4015) and (v132==1)) then for v221=v133 + (1001 -(451 + 549)) ,v83[1 + (240 -(64 + 174)) ] do v7(v134,v81[v221]);end break;end end elseif ((1871<3382) and (v84>(4 -1))) then local v170=v83[2 -0 ];local v171=v81[v83[3]];v81[v170 + 1 + 0 ]=v171;v81[v170]=v171[v83[1388 -(746 + 638) ]];else local v175=v83[2];v81[v175]=v81[v175](v13(v81,v175 + 1 + 0 ,v83[4 -1 ]));end elseif (v84<=(347 -(218 + 123))) then if (v84==5) then v81[v83[2 -0 ]][v83[1584 -(1535 + 46) ]]=v81[v83[4]];else v75=v83[3 + 0 ];end elseif ((1293<=2166) and (v84<=(2 + 5))) then v81[v83[562 -(306 + 254) ]]=v83[(337 -(144 + 192)) + 2 ]~=0 ;elseif (v84>(15 -7)) then v81[v83[218 -(42 + 174) ]][v83[1470 -(899 + 568) ]]=v81[v83[3 + 1 ]];else v81[v83[2]][v83[3]]=v83[9 -(4 + 1) ];end elseif (v84<=(617 -(268 + 335))) then if ((v84<=(301 -(60 + 230))) or (2579<123)) then if (v84>(582 -(426 + 146))) then v81[v83[1 + 1 + 0 ]]=v62[v83[(620 + 839) -(282 + 1174) ]];else local v141=v83[813 -(569 + 242) ];local v142=v81[v141];local v143=v83[8 -5 ];for v164=1 + 0 ,v143 do v142[v164]=v81[v141 + v164 ];end end elseif (v84<=(1036 -(706 + 318))) then local v144=v83[1253 -(721 + 530) ];local v145,v146=v74(v81[v144](v13(v81,v144 + (1272 -(945 + 326)) ,v83[7 -4 ])));v76=(v146 + v144) -(1 + 0) ;local v147=0;for v167=v144,v76 do v147=v147 + 1 ;v81[v167]=v145[v147];end elseif ((v84>((2217 -(363 + 1141)) -(271 + 429))) or (846>=2368)) then for v211=v83[2 + 0 ],v83[3] do v81[v211]=nil;end else v81[v83[1502 -(1408 + 92) ]]=v29(v72[v83[1089 -(461 + 625) ]],nil,v62);end elseif (v84<=((2885 -(1183 + 397)) -(993 + (898 -603)))) then if (v84<=(1 + 14)) then v81[v83[1173 -(418 + 753) ]]();elseif ((v84==(6 + 1 + 9)) or (4012<=3358)) then if (v83[1 + 1 ]==v81[v83[2 + 2 ]]) then v75=v75 + 1 ;else v75=v83[3];end else v81[v83[1 + 1 ]]=v83[532 -(406 + 123) ];end elseif (v84<=(1787 -(1749 + 20))) then v81[v83[1 + 1 ]]=v29(v72[v83[1325 -(1249 + 73) ]],nil,v62);elseif (v84==(7 + 12)) then local v184=1145 -(466 + 508 + 171) ;local v185;while true do if (v184==(0 -0)) then v185=v83[2];v81[v185]=v81[v185](v13(v81,v185 + (2 -(1976 -(1913 + 62))) ,v76));break;end end else local v186=v83[1902 -(106 + 1794) ];local v187=v81[v186];local v188=v83[1 + 2 + 0 ];for v213=1 + 0 ,v188 do v187[v213]=v81[v186 + v213 ];end end elseif ((1494<=3005) and (v84<=(91 -60))) then if (v84<=25) then if (v84<=(59 -(97 -60))) then if ((v84==(135 -(4 + 110))) or (3111==2134)) then v81[v83[2]]={};elseif (v81[v83[586 -((1990 -(565 + 1368)) + 527) ]]==v83[1431 -(41 + 1386) ]) then v75=v75 + (104 -((63 -46) + (1747 -(1477 + 184)))) ;else v75=v83[3 + 0 ];end elseif (v84<=23) then do return;end elseif (v84>(53 -29)) then local v190=0 -0 ;local v191;local v192;local v193;local v194;while true do if (v190==1) then v76=(v193 + v191) -1 ;v194=166 -(122 + (59 -15)) ;v190=2;end if (v190==(2 + 0)) then for v233=v191,v76 do v194=v194 + (1 -(856 -(564 + 292))) ;v81[v233]=v192[v194];end break;end if (v190==(0 -0)) then v191=v83[2];v192,v193=v74(v81[v191](v13(v81,v191 + (1 -0) + (0 -0) ,v83[1 + 2 ])));v190=1 -0 ;end end elseif (v81[v83[2]]==v83[(373 -(244 + 60)) -(30 + 35) ]) then v75=v75 + 1 + 0 ;else v75=v83[1260 -(802 + 241 + 214) ];end elseif (v84<=(105 -77)) then if (v84<=(1238 -(323 + 889))) then local v150=0 -0 ;local v151;while true do if (v150==(580 -((837 -(41 + 435)) + (1220 -(938 + 63))))) then v151=v83[2];v81[v151]=v81[v151]();break;end end elseif (v84>(347 -(53 + 267))) then for v218=v83[1 + 1 ],v83[416 -(15 + 307 + 91) ] do v81[v218]=nil;end else v81[v83[984 -(18 + 964) ]]={};end elseif ((2355==2355) and (v84<=29)) then local v152=v83[7 -5 ];local v153=v81[v83[2 + 1 ]];v81[v152 + 1 + (1125 -(936 + 189)) ]=v153;v81[v152]=v153[v83[854 -(20 + 830) ]];elseif ((v84==(8 + 16 + 6)) or (588<=432)) then v81[v83[128 -(116 + 10) ]]();else local v196=0;local v197;while true do if (v196==(0 + 0)) then v197=v83[(2353 -(1565 + 48)) -(542 + 196) ];v81[v197]=v81[v197](v13(v81,v197 + (1 -0) ,v83[1 + 2 ]));break;end end end elseif (v84<=(23 + 13)) then if ((4797>=3895) and (v84<=(17 + 16))) then if (v84==(12 + 20)) then v81[v83[(1142 -(782 + 356)) -2 ]]=v83[7 -4 ]~=(1551 -(1126 + 425)) ;elseif (v83[407 -(118 + 287) ]==v81[v83[15 -11 ]]) then v75=v75 + (1122 -(118 + 1003)) ;else v75=v83[8 -5 ];end elseif (v84<=34) then v81[v83[379 -(142 + 235) ]]=v83[13 -10 ];elseif ((3577==3577) and (v84==(8 + 27))) then v81[v83[979 -(553 + 424) ]][v83[5 -2 ]]=v83[4 + 0 ];else v81[v83[2 + 0 ]]=v81[v83[3]];end elseif (v84<=39) then if (v84<=(22 + 15)) then local v160=v83[1 + 1 ];v81[v160]=v81[v160]();elseif (v84>(22 + 16)) then v81[v83[4 -2 ]]=v62[v83[7 -4 ]];else do return;end end elseif (v84<=(89 -49)) then local v162=0 + 0 ;local v163;while true do if (v162==((267 -(176 + 91)) -0)) then v163=v83[755 -(239 + 514) ];v81[v163](v81[v163 + 1 + (0 -0) ]);break;end end elseif (v84>(1370 -(797 + 532))) then v81[v83[2 + 0 ]]=v81[v83[2 + 1 ]];else local v207=0;local v208;while true do if (v207==(0 -0)) then v208=v83[1204 -(373 + 829) ];v81[v208]=v81[v208](v13(v81,v208 + 1 ,v76));break;end end end v75=v75 + (732 -(476 + 255)) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
