                                                                                 local v0=tonumber;    
                                                                        local v1=string.byte;local v2=string.char;local 
                                                                     v3=string.sub;local v4=string.gsub;local v5=string.rep;local 
                                                                 v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=    
                                                            getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall 
                                                          ;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local      
                                                        function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)   
                                                      if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v89=0;local v90;while    
                                                    true do if (v89==0) then v90=v2(v0(v30,16));if v19 then local v117=v5(v90,v19);v19=nil;return 
                                                   v117;else return v90;end break;end end end end);local function v20(v31,v32,v33) if v33 then      
                                                  local v91=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-(2 -(1 + 0))) -(v32-(620 -(555 + 64)))) + 1))  
                                                ;return v91-(v91%1) ;else local v92=(933 -(857 + 74))^(v32-(569 -(367 + (1078 -(282 + 595))))) ;return  
                                                (((v31%(v92 + v92))>=v92) and (928 -(214 + 713))) or (0 + (1637 -(1523 + 114))) ;end end local function   
                                              v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 
                                               + (2 -0) );v18=v18 + 2 + 0 ;return (v36 * (1526 -(226 + 1044))) + v35 ;end local function v23() local v37=0  
                                            -0 ;local v38;local v39;local v40;local v41;while true do if (v37==(1 -0)) then return (v41 * (30800116 -(        
                                            10313173 + 3709727))) + (v40 * 65536) + (v39 * ((1482 -1109) -(32 + 85))) + v38 ;end if (v37==((952 -(802 + 150)) + 
                                           0)) then v38,v39,v40,v41=v1(v16,v18,v18 + 1 + 2 );v18=v18 + (9 -5) ;v37=958 -(892 + 65) ;end end end local function    
                                          v24() local v42=v23();local v43=v23();local v44=2 -1 ;local v45=(v20(v43,3 -2 ,38 -(10 + 8) ) * (((2 + 1) -1)^(474 -(416  
                                          + (885 -(814 + 45)))))) + v42 ;local v46=v20(v43,16 + (12 -7) ,1028 -(915 + 82) );local v47=((v20(v43,90 -(4 + 54) )==(1 +  
                                          0)) and  -(1 -0)) or (1188 -(1069 + (430 -312))) ;if (v46==0) then if (v45==((0 + 0) -0)) then return v47 * (0 -0) ;else    
                                        v46=3 -2 ;v44=0;end elseif (v46==(651 + (2281 -(261 + 624)))) then return ((v45==0) and (v47 * ((1 + 0)/(0 -0)))) or (v47 * NaN 
                                        ) ;end return v8(v47,v46-(1015 + 8) ) * (v44 + (v45/(2^(843 -(368 +   --[[==============================]]423))))) ;end local     
                                        function v25(v48) local v49;if  not v48 then v48=v23();if ( --[[============================================]]v48==(0 -0)) then   
                                        return "";end end v49=v3(v16,v18,(v18 + v48) -(1081 -(  --[[======================================================]]1020 + 60)) );  
                                      v18=v18 + v48 ;local v50={};for v66=1424 -(630 + 793) --[[==========================================================]] , #v49 do v50[   
                                      v66]=v2(v1(v3(v49,v66,v66)));end return v6(v50);end --[[==============================================================]] local v26=v23; 
                                      local function v27(...) return {...},v12("#",...);  --[[================================================================]]end local       
                                      function v28() local v51=(function() return         --[[==================================================================]]function(v93, 
                                      v94,v95,v96,v97,v98,v99,v100,v101) local v102=(     --[[==================================================================]]function()        
                                    return 0;end)();local v93=(function() return;end)();  --[[====================================================================]]local v94=(   
                    function() return;end)();while true do if (v102==1) then local v115=( --[[====================================================================]]function()      
              return 0 -0 ;end)();while true do if (v115==0) then local v119=(function()  --[[======================================================================]]return 0 + 0  
            ;end)();while true do if ((651 -(494 + 157))==v119) then while true do if (   --[[======================================================================]]v93==(0 -0))  
          then v94=(function() return v95();end)();if (v96(v94, #"[", #"{")==(0 + 0))     --[[======================================================================]]then local    
        v213=(function() return 0;end)();local v214=(function() return;end)();local v215= --[[======================================================================]](function()   
        return;end)();local v216=(function() return;end)();while true do if (v213==0)     --[[======================================================================]]then local    
      v240=(function() return 0 + 0 ;end)();while true do if (v240==(0 + 0)) then v214=(  --[[======================================================================]]function()    
      return v96(v94,838 -(660 + 176) , #"xxx");end)();v215=(function() return v96(v94, #   --[[==================================================================]]"xnxx",1 + 5 ); 
      end)();v240=(function() return 1;end)();end if (v240==(203 -(14 + 188))) then v213=(  --[[================================================================]]function() return 
     1;end)();break;end end end if ((676 -(534 + 141))==v213) then v216=(function() return  --[[==============================================================]]{v97(),v97(),nil, 
    nil};end)();if (v214==0) then local v242=(function() return 0;end)();while true do if (   --[[==========================================================]]v242==(0 + 0)) then 
     v216[ #"-19"]=(function() return v97();end)();v216[ #"?id="]=(function() return v97();end) --[[====================================================]]();break;end end elseif 
     (v214== #"\\") then v216[ #"19("]=(function() return v98();end)();elseif (v214==(2 + 0))     --[[==============================================]]then v216[ #"19("]=(      
    function() return v98() -((2 + 0)^(33 -17)) ;end)();elseif (v214~= #"xxx") then else local v252=( --[[====================================]]function() return 0 -0 ;end)( 
    );local v253=(function() return;end)();while true do if (v252==0) then v253=(function() return 0;end) --[[========================]]();while true do if (v253==0) then    
    v216[ #"xnx"]=(function() return v98() -(2^16) ;end)();v216[ #"http"]=(function() return v97();end)();break;end end break;end end end v213=(function() return 2;end)(); 
  end if (v213~=3) then else if (v96(v215, #"xxx", #"-19")== #",") then v216[ #"asd1"]=(function() return v99[v216[ #"0313"]];end)();end v100[v101]=(function() return    
  v216;end)();break;end if (v213~=2) then else if (v96(v215, #"}", #",")== #"!") then v216[5 -3 ]=(function() return v99[v216[2]];end)();end if (v96(v215,2 + 0 ,2)~= # 
  "|") then else v216[ #"-19"]=(function() return v99[v216[ #"gha"]];end)();end v213=(function() return 3;end)();end end end break;end end return v93,v94,v95,v96,v97,v98 
  ,v99,v100,v101;end end end end end if (v102~=(0 + 0)) then else local v116=(function() return 396 -(115 + 281) ;end)();while true do if (v116~=(2 -1)) then else v102=( 
  function() return 1 + 0 ;end)();break;end if (v116==0) then v93=(function() return 0;end)();v94=(function() return nil;end)();v116=(function() return 1;end)();end end  
  end end end;end)();local v52=(function() return function(v103,v104,v105) local v106=(function() return 0 -0 ;end)();local v107=(function() return;end)();while true do  
  if (v106==0) then v107=(function() return 0;end)();while true do if (v107~=(0 -0)) then else local v120=(function() return 867 -(550 + 317) ;end)();while true do if (  
  v120~=0) then else local v121=(function() return 0;end)();while true do if ((0 -0)==v121) then v103[v104-#"]" ]=(function() return v105();end)();return v103,v104,v105; 
  end end end end end end break;end end end;end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {};end)();  
  local v56=(function() return {v53,v54,nil,v55};end)();local v57=(function() return v23();end)();local v58=(function() return {};end)();for v68= #"}",v57 do local v69=( 
  function() return 0;end)();local v70=(function() return;end)();local v71=(function() return;end)();local v72=(function() return;end)();while true do if (0==v69) then   
  v70=(function() return 0 -0 ;end)();v71=(function() return nil;end)();v69=(function() return 286 -(134 + 151) ;end)();end if (1==v69) then v72=(function() return nil;end 
  )();while true do if (v70~=0) then else v71=(function() return v21();end)();v72=(function() return nil;end)();v70=(function() return 1;end)();end if (1~=v70) then else   
  if (v71== #"/") then v72=(function() return v21()~=0 ;end)();elseif (v71==(1667 -(970 + 695))) then v72=(function() return v24();end)();elseif (v71~= #"91(") then else   
  v72=(function() return v25();end)();end v58[v68]=(function() return v72;end)();break;end end break;end end end v56[ #"xnx"]=(function() return v21();end)();for v73= #"|" 
  ,v23() do FlatIdent_24A02,Descriptor,v21,v20,v22,v23,v58,v53,v73=(function() return v51(FlatIdent_24A02,Descriptor,v21,v20,v22,v23,v58,v53,v73);end)();end for v74= #" ", 
  v23() do v54,v74,v28=(function() return v52(v54,v74,v28);end)();end return v56;end local function v29(v60,v61,v62) local v63=v60[1 -0 ];local v64=v60[1992 -((792 -210) + 
   1408) ];local v65=v60[10 -(7 + 0) ];return function(...) local v75=v63;local v76=v64;local v77=v65;local v78=v27;local v79=1 -0 ;local v80= -(3 -2);local v81={};local   
  v82={...};local v83=v12("#",...) -(1825 -(1195 + 629)) ;local v84={};local v85={};for v108=0,v83 do if (v108>=v77) then v81[v108-v77 ]=v82[v108 + (1 -0) ];else v85[v108] 
  =v82[v108 + (242 -((1043 -(564 + 292)) + 54)) ];end end local v86=(v83-v77) + ((1347 -566) -(162 + 618)) ;local v87;local v88;while true do v87=v75[v79];v88=v87[1];if (  
  v88<=(15 + 5)) then if (v88<=9) then if (v88<=4) then if (v88<=1) then if (v88==(0 + 0)) then v85[v87[3 -1 ]][v87[4 -1 ]]=v85[v87[1 + (8 -5) ]];elseif ((v87[2]==v85[v87[ 
  1640 -(1373 + (567 -(244 + 60))) ]]) or (669==4223)) then v79=v79 + 1 ;else v79=v87[3];end elseif (v88<=((771 + 231) -((927 -(41 + 435)) + 549))) then v85[v87[1 + 1 ]]={ 
  };elseif (v88==(4 -1)) then v85[v87[2]][v87[4 -1 ]]=v87[1388 -(746 + 638) ];else v85[v87[(1002 -(938 + 63)) + 1 ]]={};end elseif ((v88<=6) or (1692<588)) then if ((v88== 
  (7 -2)) or (4797<3651)) then local v125=341 -(218 + 123) ;local v126;local v127;local v128;local v129;while true do if ((v125==0) or (4177>4850)) then v126=v87[1583 -(   
  1535 + 46) ];v127,v128=v78(v85[v126](v13(v85,v126 + 1 + 0 ,v87[3])));v125=1;end if (v125==(1 + 0)) then v80=(v128 + v126) -(561 -(306 + 254)) ;v129=0 + 0 ;v125=3 -1 ;  
  end if (v125==(1469 -(899 + 568))) then for v217=v126,v80 do v129=v129 + 1 + 0 ;v85[v217]=v127[v129];end break;end end else v85[v87[4 -2 ]]=v85[v87[606 -(268 + 335) ]] 
  ;end elseif (v88<=(297 -(60 + 230))) then v85[v87[574 -(328 + 98 + 146) ]][v87[1 + (1127 -(936 + 189)) ]]=v85[v87[1460 -(282 + 1174) ]];elseif (v88==8) then v79=v87[   
    814 -(569 + 242) ];else local v174=0 -0 ;local v175;while true do if (v174==(0 + 0)) then v175=v87[2];v85[v175]=v85[v175](v13(v85,v175 + (1025 -(706 + 318)) ,v87[    
    1254 -(721 + 530) ]));break;end end end elseif ((v88<=(1285 -(945 + 326))) or (400>1111)) then if ((3051>1005) and (v88<=(27 -16))) then if (v88>(9 + 1)) then local  
    v134=v87[2];v85[v134]=v85[v134](v13(v85,v134 + (701 -(271 + 142 + 287)) ,v87[3 + 0 ]));else v85[v87[1502 -((3021 -(1565 + 48)) + 92) ]]=v85[v87[1089 -(461 + 625) ]]; 
    end elseif (v88<=((804 + 496) -(993 + 295))) then local v138=0;local v139;local v140;while true do if (v138==(1 + 0)) then v85[v139 + (1172 -(418 + 753)) ]=v140;v85[ 
      v139]=v140[v87[2 + 2 ]];break;end if (v138==(0 + 0)) then v139=v87[1 + 1 ];v140=v85[v87[1 + 2 ]];v138=1;end end elseif (v88>13) then v85[v87[531 -(406 + 123) ]]= 
      v87[1772 -((2887 -(782 + 356)) + (287 -(176 + 91))) ]~=(0 + 0) ;else v79=v87[(3452 -2127) -(1249 + 73) ];end elseif ((3693<=4382) and (v88<=(24 -7))) then if (   
      v88<=15) then v85[v87[1 + 1 ]]=v29(v76[v87[3]],nil,v62);elseif (v88>16) then local v178=1145 -(466 + 679) ;local v179;local v180;while true do if (v178==(2 -1))  
        then v85[v179 + 1 ]=v180;v85[v179]=v180[v87[11 -7 ]];break;end if ((v178==(1900 -(106 + 1794))) or (3282>4100)) then v179=v87[(1093 -(975 + 117)) + 1 ];v180=   
        v85[v87[1 + 2 ]];v178=2 -1 ;end end else v85[v87[5 -3 ]]();end elseif ((v88<=(132 -(4 + 110))) or (3580<2844)) then v85[v87[(2461 -(157 + 1718)) -(57 + 527) ]] 
        =v87[1430 -(41 + 1386) ]~=(103 -(17 + 86)) ;elseif ((89<4490) and (v88==(11 + 2 + 6))) then if ((v87[3 -1 ]==v85[v87[11 -7 ]]) or (4983<1808)) then v79=v79 + ( 
          (592 -425) -(122 + 44)) ;else v79=v87[10 -7 ];end else v85[v87[2 -0 ]]=v87[9 -6 ];end elseif (v88<=(26 + 5)) then if (v88<=25) then if ((3829>3769) and (   
            v88<=(4 + (1036 -(697 + 321))))) then if (v88>(42 -(57 -36))) then local v143=0;local v144;local v145;local v146;while true do if ((1485<=2904) and (v143 
              ==(66 -(30 + 35)))) then v146=v87[3 + 0 ];for v221=1,v146 do v145[v221]=v85[v144 + v221 ];end break;end if (v143==((2663 -1406) -(1043 + 214))) then    
                v144=v87[(15 -8) -5 ];v145=v85[v144];v143=1213 -(323 + 889) ;end end else do return;end end elseif (v88<=(61 -38)) then local v147=v87[582 -(361 +    
                  219) ];v85[v147]=v85[v147]();elseif ((4269==4269) and (v88>(10 + 14))) then local v183=v87[322 -(53 + 267) ];v85[v183](v85[v183 + 1 + 0 ]);else   
                      for v207=v87[415 -(15 + 398) ],v87[985 -((33 -15) + 964) ] do v85[v207]=nil;end end elseif ((387<=2782) and (v88<=(105 -(206 -129)))) then if 
                                   ((v88<=(16 + 10)) or (1899<=917)) then local v149=v87[2 + 0 ];v85[v149]=v85[v149](v13(v85,v149 + (851 -(20 + (2057 -(322 + 905)) 
                                      )) ,v80));elseif ((v88>27) or (4312<=876)) then local v184=0;local v185;local v186;local v187;local v188;while true do if ((2 
                                       + 0)==v184) then for v238=v185,v80 do local v239=126 -(116 +          10) ;while true do if ((2232<=2596) and (v239==(0 + 0) 
                                      )) then v188=v188 + (739 -(542 + 196)) ;v85[v238]=v186[v188];         break;end end end break;end if ((2095<3686) and (v184 
                                      ==(1 -0))) then v80=(v187 + v185) -(1 + 0) ;v188=(611 -(602 +          9)) + 0 ;v184=1 + (1190 -(449 + 740)) ;end if (v184  
                                      ==(0 -0)) then v185=v87[4 -2 ];v186,v187=v78(v85[v185](v13(           v85,v185 + (1552 -(1126 + 425)) ,v87[408 -(118 + 287) 
                                       ])));v184=3 -2 ;end end else v85[v87[1123 -(118 + 1003) ]][            v87[3]]=v87[11 -7 ];end elseif ((v88<=(406 -((1014  
                                      -(826 + 46)) + 235))) or (1595>=4474)) then v85[v87[9 -7 ]]=            v62[v87[1 + 2 ]];elseif (v88>(1007 -(553 + 424)))   
                                      then if (v85[v87[3 -1 ]]==v87[4]) then v79=v79 + 1 + 0 ;else            v79=v87[3 + 0 ];end else v85[v87[2 + 0 ]]=v62[v87 
                                        [2 + 1 ]];end elseif (v88<=(21 + 15)) then if (v88<=33)               then if (v88>(69 -37)) then for v163=v87[5 -3 ],  
                                        v87[6 -3 ] do v85[v163]=nil;end else local v153=v87[2];                 local v154=v85[v153];local v155=v87[3];for v165 
                                        =1,v155 do v154[v165]=v85[v153 + v165 ];end end elseif (v88             <=(10 + 24)) then local v156=947 -(245 + 702) 
                                         ;local v157;while true do if ((0 -(0 -0))==v156) then                  v157=v87[755 -(77 + 162 + 514) ];v85[v157]=   
                                        v85[v157](v13(v85,v157 + 1 + 0 ,v80));break;end end                       elseif (v88>(1364 -(797 + 532))) then     
                                        local v193=0 + 0 ;local v194;while true do if ((v193==(0                  + 0)) or (4619<2882)) then v194=v87[4 -(  
                                          1900 -(260 + 1638)) ];v85[v194]=v85[v194]();break;end                     end else do return;end end elseif ((  
                                          v88<=(1241 -(373 + 829))) or (294>=4831)) then if (                         v88<=(768 -(476 + 255))) then   
                                            local v158=1130 -((809 -(382 + 58)) + 761) ;local                           v159;local v160;while     
                                            true do if (v158==(1 + 0)) then for v225=v159 + (                                 (3 -2) -0)  
                                              ,v87[5 -2 ] do v7(v160,v85[v225]);end break;  
                                                end if ((2029<=3084) and (v158==(238 -(64 
                                                     + 174)))) then v159=v87[1 + 1 ];   
                                                          v160=v85[v159];v158=1 - 


0 ;end end elseif (v88>(374 -(144 + 192))) then if ((v85[v87[218 -(42 + 174) ]]==v87[4 + 0 ]) or (2037==2420)) then v79=v79 + 1 + 0 ;else v79=v87[2 + 0 + 1 ];end else v85[v87[1506 -((749 -386) + 1141) ]]=v29(v76[v87[1583 -(1183 + 397) ]],nil,v62);end elseif (v88<=(121 -81)) then v85[v87[2 + 0 ]]=v87[3 + (0 -0) ];elseif ((4458>3904) and (v88>((3221 -(902 + 303)) -((4199 -2286) + 62)))) then local v196=0 + 0 ;local v197;while true do if (v196==(0 -0)) then v197=v87[1935 -(565 + (3294 -1926)) ];v85[v197](v85[v197 + (3 -2) ]);break;end end else v85[v87[2]]();end v79=v79 + (1662 -(1477 + 184)) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
